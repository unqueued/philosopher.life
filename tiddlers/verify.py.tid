created: 20180719034641229
creator: h0p3
modified: 20190209011648312
modifier: h0p3
tags: 
title: verify.py

```python
#!/usr/bin/python3

import nacl.encoding
import nacl.signing
import nacl.hash
import binascii

# Make sure you've got h0p3's current public signature key below.
verify_key_hex = "5249578e4cdfaec1484f0083df3e8b6e4af0cab0288c8156c31d6e94efe58308"
verify_key = nacl.signing.VerifyKey(verify_key_hex, encoder=nacl.encoding.HexEncoder)

# Read sig file into signed_hash and signature.
with open('index.html.sig', 'r') as myfile:
    # data=myfile.read().replace('\n', '')
    data = myfile.readlines()
signed_hash = data[0].strip()
signature = binascii.unhexlify(data[1].strip())

# Check the digest of index.html against the signed hash.
with open('index.html', 'r') as index_file:
    data = index_file.read().encode()
digest = nacl.hash.sha256(data, encoder=nacl.encoding.HexEncoder).decode()
if signed_hash == digest:
    print("Integrity Check Passed")
    # Check the validity of the signature because integrity check passed.
    try:
        verify_key.verify(signature)
        print("Signature Verified: You possess a bit-for-bit copy of a wiki signed with h0p3's private key!")
    except:
        print("Signature Verification Failed: RUH ROH! If you feel safe, please {Contact} h0p3 over Tor with a fresh account.")
else:
    print("Integrity Check Failed: You do not possess a bit-for-bit copy of the wiki, thus signature verification is useless.")
```