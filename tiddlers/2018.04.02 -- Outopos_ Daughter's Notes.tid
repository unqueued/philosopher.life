created: 20180402152914930
modified: 20180402152915408
title: 2018.04.02 -- Outopos: Daughter's Notes

use new programs as libraries

mutable torrent client
exe that reads a conf file (or cmd line options?)
check against each other then just rsync
ssh tunnels with mout points
lftp?

private is read-write
public is read-only, made by private
encrypted is public key generated by using public as private

argon2 password

(Technically, you could use Invisign)

argon2
pgp
upnpc
rsync
ssh
sshfs
crontab
init
systemd
btrfs or rtorrent
tox
mesh vpn protocols
decentralized git
vpncloud
nomachine
resilio sync


hashing:
do it by hand
rtorrent (integrity check, repair what's wrong)

make things like rsync a literal library

no max users

rtorrent is provably scalable, written from the ground up to be performant

message passing using tox?
use tox to negotiate
send messages of files

run ssh servers (has to be able to use curve25519

whoever demonstrate they have the lowest key is the one that sshs into the other

would be ideal if the primary executable is doing routing
sort packets so that we can make it run off one port and one key

make sure you aren't a rogue by momentarily adding a file we both know (nonce file), take a hash of all the hashes in the directory, tell to do the computation, if you have the files, you'll give the right hash. you can verify they have the files.
check if someone's serving by asking someone else to ask for some files, if they don't serve, someone tells su (any time something seems wrong in the swarm, tell su)
this allows us to destroy civil attacks
su can dictate who holds what - maybe you want to shard a file across multiples
su can be a search directory
 
focus on bootstrapping

generate files of any size

write in xonsh for now
write in go if we like it
write in rust if we love it

ssh chains
vpn

designed to be run in chroot or docker
hand-installed on any system

arch vm, imunes w/ tweaks, xfce, devvironment
vm on 100% of the time, on htpc
minimum nixos docker in the vm
setup a backup redundancy snapshot with rsyncs, so we can roll back, and git the snapshots
toolchain that lets us build our own docker with nixos
see about how nix repositories work, try and do self-hosting
figure out how to do versioning
write scripts to simulate networks on imune testing vm

initial installations of djinnios will include the git for nixos (and any necessary packages), and the dev/testing environments
make it so the software tests itself
must have a repeatable build system (that is, you must be able to construct the exact same binaries as another person)
2 different images - one is the bare minimum, the other will be moduled ones, which we pawn off as their own products
move to imuneos as devvironment
write the tests next to the thing itself

the module will be described in terms of nixos language
resilio sync

we're targeting proprietary linux software, making opensource alternatives, modules that sit on a system
these modules add up to a botnet

container agnostic
arch-friendly
debian-friendly?

web ui
cleanse inputs

choose high performance software

open-source botnet
botnet os
mit or more permissive licensed
botcloud!

docker needs an interface it controls
must install software on your system to create virtual interface (nest vpns)
controlling the interface would allow to build firewall rules and maybe do routing

build this as a vm

ubuntu core for permission distribution

onion routing already in
threeway (fiveway?) handshake anonymity tool, dining cryptographers
dc-net with mixer and onion writing at the basis

iot tool

sleepers that look at reddit, twitter, etc. anything online

command a control grouping by vpncloud

multisig

chain keyrings

construct the tool by building their own topology programmatically through the nixos language

decentralized git repository of nixos

out of the box we want particular configurations, resilio sync configuration

mission statement: replace resilio with something open source

build process must be highly replicable, and easy to audit

resliantos

mutable sync of ip addresses
mechanism for making one swarm switch to another

nomachine and resilio sync

latus or onion routed mesh over 3 person dc-net latus

nixos modules/packets
make modules for closed-source applications we adore (allows us to leverage free but proprietary software)

blockchains

i2p networks

language that sits on top of nixos's language

learn how to use and program nixos