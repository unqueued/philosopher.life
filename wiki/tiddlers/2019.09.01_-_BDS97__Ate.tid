created: 20190916040434529
modified: 20190916041709974
tags: BDS97
title: 2019.09.01 - BDS97: Ate

//Shit. qTox ate my homework yet again. I know better than to wait. dis wat i git.//

```
[23:07:47] b3nsn0w: and I agree, that's the sacrifice we have to nullify
[23:08:19] b3nsn0w: I'm thinking atropos will have 1-4 hops for the full connection on default settings (1-2 on transmitting end of the tunnel, 0-2 on receiving end)
[23:08:41] b3nsn0w: since the goal is hundreds of tunnels simultaneously, that's not 1 or 4, it's both
[23:09:33] b3nsn0w: and packets just use the path of least resistance, so if the 1-hop thing works, it works, if it's found and blocked somehow, it still goes through the higher hop tunnels
[23:09:56] h0p3: ah, that is new
[23:10:10] h0p3: yes, I like that
[23:10:14] b3nsn0w: if you need protection against ever being found though, you can just increase the anonymity setting and it does at least 3 on your side, plus whatever the other is configured at
[23:11:03] b3nsn0w: there's also a plan for a direct connection setting, which is basically the same thing but with enabling 0 hops on the transmitting end
[23:11:08] b3nsn0w: with 1-4 still there for backup
[23:11:21] b3nsn0w: that could work especially well for low-latency, low-anonymity stuff like gaming
[23:11:46] h0p3: in the end, some people are going to want site-to-site, but they will have to turn that on, since it defeats the purpose generally
[23:13:02] b3nsn0w: yeah, I think they'll be able to do dedicated tunnels if needed (they'll most likely just push IP through it like they already do and Atropos goes wherever IP packets go)
[23:13:16] b3nsn0w: but in this context the real advantage of atropos is NAT punchthrough
[23:13:17] b3nsn0w: like what
[23:13:35] b3nsn0w: it's designed to punch through the great firewall of china, a random lesser firewall won't stop it
[23:14:09] b3nsn0w: it would make setting up any peer to peer protocol ridiculously easy
[23:14:51] b3nsn0w: just say the endpoint's ID (kind of like an atropos IP, except it's also a public key) and go, no routing nonsense needed
[23:15:13] b3nsn0w: did I talk about half tunnels before btw?
[23:17:38] h0p3: I thought you did, but I don't remember, and I don't see them in my notes.
[23:17:40] h0p3: Tell me again, please
[23:18:14] b3nsn0w: so basically the idea for tunnels is you build your half for the tunnel
[23:18:19] b3nsn0w: the transmitting half
[23:18:51] b3nsn0w: and kind of leave the end of it open, connectable on a specific node with a key only you know
[23:19:16] b3nsn0w: you tell that address and the key to the other node you're talking with
[23:19:43] b3nsn0w: and they go and build their half to that point, then plug their tunnel into yours with the key
[23:20:05] b3nsn0w: and there you have it, a complete tunnel without either side knowing where the other end is
[23:20:28] b3nsn0w: the idea is to have this happen ~10 times a second at random middle nodes
[23:20:52] b3nsn0w: and each tunnel lives about 30 seconds, enforced by every intermediate node
[23:21:31] b3nsn0w: so that's 300 parallel tunnels at once, constantly changing and trying to find the path of the least resistance
[23:22:04] h0p3: If the performance isn't good enough, we can scale this differently.
[23:22:16] h0p3: That is a fuckton of tunnels
[23:22:47] h0p3: I know we are building it slim and with the right tools here, but there are no onion routers that pull these kinds of numbers without dedicated machines.
[23:23:31] b3nsn0w: it is, but I kinda think atropos should measure bandwith in megabits and ram in megabytes
[23:23:56] b3nsn0w: kinda went through a few ways of attacking the protocol once it's live, I think this one would be an absolute nightmare to censor
[23:24:06] h0p3: monstrous 
[23:24:29] b3nsn0w: not as anonymous as tor on default settings, but that's just the default
[23:25:02] b3nsn0w: put your anonymity setting to 3 or above, and it's gonna be a hard task to figure out who is talking to who
[23:25:20] b3nsn0w: the other thing I like about this is dynamically finding the path of least resistance, and seamlessly to the user
[23:26:03] b3nsn0w: so for example even if an ISP is able to associate the 1-hop tunnels with traffic it doesn't think should be high-bandwidth, those tunnels will just be lower quality, will get deprioritized, and they can scan again
[23:26:23] b3nsn0w: all of this in a matter of seconds, and the multi-hop backups are still there serving the same traffic, so the user notices precisely nothing
[23:26:53] b3nsn0w: I do get your point though, I can't see an arduino running this
[23:27:22] b3nsn0w: but an arduino can just use a lower number of tunnels, as long as you have one you should be fine
[23:28:41] h0p3: perhaps this must be automagically benchmarked on the machine
[23:29:06] b3nsn0w: I'd expose it as a parameter just like the anonymity setting
[23:29:24] b3nsn0w: you're writing code for a low-perf machine? Great, here's a lot less tunnels for you to keep it running
[23:29:31] b3nsn0w: but yeah, making it adaptive is also an option
[23:29:55] b3nsn0w: although, I can't imagine anything raspberry-level and up having a problem with this, modern computers are incredibly powerful
[23:31:44] h0p3: I have no idea how to do this well. It is valuable that we are conservative enough that Atropos is just an EZ piece of the puzzle for someone who really wants to use the resources, but we also have to make sure that the average user (and developer) is contributing fairly to a robust network.
[23:32:03] h0p3: parameters are the way to go
[23:33:18] b3nsn0w: yeah, resource sharing and T42T is a whole another problem we'll need to solve, on multiple levels
[23:33:45] b3nsn0w: for example, the rhizome is inherently anonymous, while higher layers such as the Hub would need to be pseudonymous
[23:33:57] b3nsn0w: so they can't use the same tallies
[23:34:28] b3nsn0w: that would undermine the entire onion routing layer
[23:35:57] b3nsn0w: also, another thing
[23:36:13] b3nsn0w: I'm kinda thinking of a motto for future plans
[23:36:34] b3nsn0w: "inexorability through technology"
[23:37:06] b3nsn0w: and it would be badass to have this in ancient greek, but I have zero idea how to even begin translating it
[23:37:42] h0p3: probably best to go latin
[23:37:45] h0p3: inexorabilis
[23:37:59] b3nsn0w: yeah, that's also an option
[23:38:15] b3nsn0w: it would also be easier, latin is more widespread
[23:38:31] b3nsn0w: okay, I'm gonna do a dumb thing and just type it into google translate
[23:38:54] b3nsn0w: let's see if they send the NSA after me
[23:39:13] h0p3: Per technology inexorability is latin, lol
[23:39:21] b3nsn0w: lol, yeah
[23:39:51] b3nsn0w: okay, that was a stupid attempt
[23:40:51] b3nsn0w: anyway, I have one friend from HS who might have an idea about it, but we've been barely talking
[23:41:30] b3nsn0w: might ask him about it, he knows I'm working on a comic about a group of hackers
[23:41:43] h0p3: I can ask my wife. She's a librarian. They do that sort of thing often. Plus, lots of scholars at the university across the street from me.
[23:41:56] b3nsn0w: oh, nice, that would be great
[23:42:42] b3nsn0w: I'm trying to put together an action plan in the background to finally get this thing off the ground
[23:43:32] b3nsn0w: because, well, things haven't been exactly going in the right direction in the past three years while we have been talking about it
[23:43:45] h0p3: no doubt
[23:44:08] b3nsn0w: for example, how about a nodejs prototype client that's only for us, before we put together the proper one
[23:44:11] b3nsn0w: for testing and stuff
[23:44:18] b3nsn0w: (and also for a better messaging platform)
[23:45:00] h0p3: a working prototype makes good sense
[23:45:07] b3nsn0w: although, if it's compatible with the final protocol, I see no issue releasing it
[23:45:17] b3nsn0w: a pure JS version could be useful in some edge cases
[23:45:27] h0p3: If you trust the nodejs ecosystem you are using, sure.
[23:45:57] h0p3: I think Golang is a better prototyping language here.
[23:46:13] b3nsn0w: yeah, maybe
[23:46:29] b3nsn0w: looking back to the rust implementation, the thing I'm struggling with is not crypto or binary juggling
[23:46:43] b3nsn0w: it's the control structures, the glue between all the components
[23:47:19] b3nsn0w: part of it is perfectionism, and the other part is just traditional methods are weird AF if you got a multicore CPU
[23:47:46] b3nsn0w: I even put together half a framework for a multicore event loop thing
[23:48:04] b3nsn0w: only half, because I didn't finish it, couldn't solve async-await without language modifications I don't know how to do
[23:48:19] b3nsn0w: (might be a macro in rust, gonna look that stuff up later)
[23:48:43] b3nsn0w: anyway, I feel like Node development would go faster because if it's good for one thing it's gluing stuff together
[23:49:32] b3nsn0w: and for the ecosystem, crypto packages are usually nice and don't have a lot of dependencies, and apart from those the standard library is sufficient
[23:49:49] b3nsn0w: node's problems begin in the bikeshedding territory
[23:52:49] h0p3: Here's what I like about node: you are skilled with it, you can rapidly build something and if you don't like it, you won't feel any perfectionistic sunk cost fallacy about scrapping it to try something else. Considering the popularity of it, it may also be the preferred tool for many people.
[23:54:12] b3nsn0w: I think it's more of a being afraid of coding myself into a corner thing, but agreed on that
[23:54:36] b3nsn0w: I have no problems cutting off sunk cost, I just prefer not sinking it in the first place, and that can sometimes block me from writing any code at all
[23:54:40] b3nsn0w: which is arguably even worse
[23:55:07] b3nsn0w: anyway, it's gonna be scrap anyway, it's a prototype, so that shouldn't be a problem here
[23:55:47] b3nsn0w: as for the popularity thing, I do intend on making a final nodejs package too, but that will be basically a wrapper around the rust version running in webassembly
[23:56:42] b3nsn0w: anyway, sorry, I kinda have to go, it's nearly 6AM here
[23:57:02] h0p3: Sleep well, sir!
[23:57:32] b3nsn0w: thanks, and have a good rest of the day you too, however much is left of it at this point
```